@import url(./colors_fonts.css);
@import url(./reset.css);

body{
    width: 100%;
    height: 100vh;
    box-sizing: border-box;  
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column; 
}

.cabecalho {
    width:100%;
    margin: auto auto;
    padding: 10px 5px;
    height: 120%;
    left: 0px;
    top: 0px;
    background: var(--cor-um);

    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logoru{
    margin-right: 50%;
}

nav {
    flex: 1;
    text-align: right;
    margin-top: 10px;
    margin-left: auto;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
    display: flex;
  }
  
  li {
    display: inline-flex;
    margin-right: 10px;
  }



#cardapio,
#resolucao_header,
#login_header{
    font-family: var(--font-dois);
    font-size: 12px;
    border-radius: 25px;
    text-decoration: none;
    padding: 10px;
    float: right;
    margin-right: 10px;
    right: 40%;
    background-color: var(--cor-quatro);
    color: var(--cor-tres);
}

.carousel {
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
}

.carousel__item {
  scroll-snap-align: start;
  flex: 0 0 100%;
  width: 100%;
  max-width: 100%;
}

.carousel__item img {
  width: 100%;
  height: auto;
}
Nesse exemplo, temos um <div> com a classe .carousel que envolve os itens do carrossel. Cada item é representado por um <div> com a classe .carousel__item, que contém uma imagem.

Usamos display: flex; na classe .carousel para criar um layout flexível e overflow-x: auto; para permitir a rolagem horizontal quando os itens do carrossel não couberem na tela.

A propriedade scroll-snap-type: x mandatory; é usada para definir o comportamento de rolagem em relação aos pontos de ancoragem, permitindo a rolagem "snap" para cada item do carrossel.

Na classe .carousel__item, definimos scroll-snap-align: start; para alinhar cada item corretamente no carrossel.

A propriedade flex: 0 0 100%; garante que cada item ocupe todo o espaço horizontal disponível no carrossel, enquanto width: 100%; e max-width: 100%; garantem que a imagem se ajuste ao tamanho do item.

Por fim, aplicamos width: 100%; e height: auto; na imagem dentro de cada item para garantir que ela se ajuste ao tamanho do item e mantenha a proporção correta.

Com essas configurações, o carrossel terá um comportamento de rolagem horizontal estendido em desktop, permitindo que o usuário navegue pelas imagens. Em dispositivos móveis, o carrossel se ajustará automaticamente para se adaptar à largura da tela, permitindo a rolagem horizontal e garantindo que cada imagem seja exibida em um único item por vez.





User
na tela mobile, como faço os botões irem para de baixo da logo no header
ChatGPT
Para fazer os botões irem para baixo da logo no <header> em telas móveis, você pode utilizar a propriedade flex-direction com uma media query para alterar o layout do <header>. Aqui está um exemplo:

HTML:

html
Copy code
<header>
  <div class="logo">
    <img src="logo.png" alt="Logo">
  </div>
  <nav>
    <ul>
      <li><a href="#ancora1">Âncora 1</a></li>
      <li><a href="#ancora2">Âncora 2</a></li>
    </ul>
  </nav>
</header>
CSS:

css
Copy code
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  flex: 1;
}

nav {
  flex: 1;
  text-align: right;
  margin-top: 10px;
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  display: inline-block;
  margin-right: 10px;
}

a {
  text-decoration: none;
}

/* Estilos para dispositivos móveis */
@media screen and (max-width: 600px) {
  header {
    flex-direction: column;
  }

  nav {
    text-align: center;
    margin-top: 20px;
  }
}
Nesse exemplo, inicialmente, usamos display: flex; no <header> para criar um layout flexível com os elementos do <header> lado a lado. A logo está dentro da <div> com a classe .logo, e o menu de navegação está dentro da <nav>. Utilizamos justify-content: space-between; para espaçar os elementos horizontalmente no <header>.

Em seguida, adicionamos estilos para acomodar os botões abaixo da logo em telas móveis. Na media query @media, definimos flex-direction: column; no <header>, o que fará com que os elementos sejam empilhados verticalmente em vez de ficarem em linha.

Além disso, ajustamos o alinhamento do <nav> para text-align: center; e aumentamos a margem superior para margin-top: 20px; para separar visualmente os botões da logo.

Dessa forma, em telas móveis, a logo ficará acima dos botões, com os botões alinhados centralmente abaixo dela. Em telas maiores, o layout padrão com a logo e os botões lado a lado será mantido.









.resolucao{
    min-height: 100vh;
    width: 100vw;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    box-sizing: border-box;
    padding: 0 10%;

    font-family: var(--font-um);
    font-style: normal;
    font-weight: 400;
    font-size: 20px;
    line-height: 27px;

    flex: 1 0 auto;

    color: var(--cor-tres);
}

.texth2{
    color: var(--cor-tres);
    text-align: center;
    font-family: var(--font-dois);
    font-style: normal;
    font-weight: 400;
    font-size: 30px;
    padding: 10px;
    margin-top: 4%;
    margin-bottom: 4%;
}

.ruru{
    top: 50%;
    left: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}

 .rururu{
    max-width: 80%;
 }

.resolucao{
    width: 100vw;
    box-sizing: border-box;
    padding: 0 10%;
    font-family: var(--font-dois);
    font-style: normal;
    font-weight: auto;
    font-size: 16px;

    line-height: 27px;
    flex: 1 0 auto;
    
    color: var(--cor-tres);
    margin-bottom: 5rem;
}

.rodape{
    height: 120px;
    left: 0px;
    right: 0px;
    top: 1031px;
    background: var(--cor-um);
    width:100%;
    margin: auto auto;
    padding: 10px 5px;
    flex-shrink: 0;
}

.contatos{
    width: 266px;
    height: 116px;
    right: 38px;
    top: 1042px;
    color: var(--cor-quatro);
    font-family: var(--font-dois);
    font-style: normal;
    font-weight: 400;
    font-size: 14px;
    line-height: 10px;
    margin-left: 4.5%;
}

#email_unifesspa,
#whatsapp,
#instagram{
    padding-top: 10px;
}


/*DEIXANDO ADAPTADO PARA MOBILE*/
@media screen and (max-width: 520px) {
    body{
        width: 100%;
        height: 70%;
    }

    .cabecalho{
        flex-direction: column;
    }

    .logoru{
        width: 100%;
        height: 70%;
        align-items: center;
    }

    .botoes{
        margin-right: 10%;
    }

    .coluna{
        width: 100%;
    }

    .ruru{
        top: 50%;
        left: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .rururu{
        max-width: 80%;
     }

    .resolucao{
        min-height: 100vh;
        width: 100vw;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        box-sizing: border-box;
        padding: 0 10%;
    }
    .rodape{
        height: 20%;
        width: 100%;
        flex-shrink: 0;
        background: var(--cor-um);
    }
}